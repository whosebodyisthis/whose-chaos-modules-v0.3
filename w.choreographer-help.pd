#N struct scorer float x float y array system1 wave-element array system2 wave-element array system3 wave-element array system4 wave-element array system5 wave-element array system6 wave-element float label1 float label2 float label3 float label4 float label5 float label6 float sys1play float sys2play float sys3play float sys4play float sys5play float sys6play;
#N struct wave-element float y float w;
#N canvas 587 320 610 420 10;
#X obj 12 8 cnv 15 100 60 empty empty choreographer\ Help 7 12 1 18 #ffffff #404040 0;
#X obj 1 38 cnv 15 250 380 empty empty empty 20 12 0 14 #e0e0e0 #404040 0;
#X text 7 288 Inlets:;
#X text 8 316 2: (signal) right line-in;
#X text 8 302 1: (signal) left line-in;
#X text 27 346 key-word + \$1 in *message* box);
#X text 7 367 Outlets:;
#X text 8 331 3: (control) modulation routing (slider;
#X text 5 44 Chaotic dynamic score generator.;
#X text 5 58 Uses Lorenz and Roessler attractors;
#X text 6 72 to create control systems \, used to;
#X text 6 85 modulate paramters on other modules.;
#X text 6 97 Each system shares identical controls:;
#X text 6 130 'new' generates a new system.;
#X text 6 143 'rate' controls play speed.;
#X text 6 156 'mult' controls output multiplier.;
#X text 6 169 'pos.' controls playhead position.;
#X text 6 182 'offset' applies offset to output.;
#X text 6 195 'go!' plays the system.;
#X text 6 208 'dyn' allows random rewrites of system.;
#X text 6 221 'bi' makes output bipolar.;
#X text 6 234 'rnd' jumps playhead around the system;
#X text 6 247 randomly.;
#X text 8 381 All: Respective system output;
#X obj 261 126 w.choreographer;
